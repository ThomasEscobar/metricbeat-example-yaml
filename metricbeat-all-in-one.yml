apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: metricbeat
  namespace: default
  labels:
    app.kubernetes.io/name: metricbeat
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: 7.16.2
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: logging
    app.kubernetes.io/managed-by: kubectl
spec:
  type: metricbeat
  version: 7.16.2
  elasticsearchRef:
    name: elastic
  kibanaRef:
    name: elastic
  config:
    setup.template.overwrite: true
    setup.template.settings:
      index.number_of_shards: 1
      index.number_of_replicas: 0
    setup.ilm.overwrite: true
    setup.ilm.policy_file: ilm-policy.json
    metricbeat:
      autodiscover:
        providers:
          - hints:
              default_config: {}
              enabled: "true"
            node: ${NODE_NAME}
            type: kubernetes
      modules:
        - module: system
          period: 10s
          metricsets:
            - cpu
            - load
            - memory
            - network
            - process
            - process_summary
          process:
            include_top_n:
              by_cpu: 5
              by_memory: 5
          processes:
            - .*
        - module: system
          period: 1m
          metricsets:
            - filesystem
            - fsstat
          processors:
            - drop_event:
                when:
                  regexp:
                    system:
                      filesystem:
                        mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib)($|/)
    processors:
      - add_cloud_metadata: {}
      - add_host_metadata: {}
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: metricbeat
        automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
        containers:
          - args:
              - -e
              - -c
              - /etc/beat.yml
            name: metricbeat
            volumeMounts:
              - name: cgroup
                mountPath: /cgroup
                # Not sure what cgroups are, but was seeing the error reported here: https://discuss.elastic.co/t/metricbeat-k8s-error-getting-group-status-open-proc-pid-cgroup/255371
                # and here: https://github.com/elastic/beats/issues/23267. No workaround or fix until 8.2, potentially 7.17
                # Fixed it by changing the mount path from "/hostfs/sys/fs/cgroup" to "/cgroup", and removing the "-system.hostfs=/hostfs" argument
              - name: dockersock
                mountPath: /var/run/docker.sock
              - name: proc
                mountPath: /hostfs/proc
              - name: ilm-policy
                mountPath: /usr/share/metricbeat/ilm-policy.json
                subPath: ilm-policy.json #Makes sure the one file in the configmap is being mounted as a file and not a directory. This works as "filtering" on what to mount from the original volume
            env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        securityContext:
          runAsUser: 0
        terminationGracePeriodSeconds: 30
        volumes:
          - name: cgroup
            hostPath:
              path: /sys/fs/cgroup
          - name: dockersock
            hostPath:
              path: /var/run/docker.sock
          - name: proc
            hostPath:
              path: /proc
          - name: ilm-policy
            configMap:
              name: metricbeat
---
# permissions needed for metricbeat
# source: https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-kubernetes.html
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metricbeat
  namespace: default
  labels:
    app.kubernetes.io/name: metricbeat
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: 7.16.2
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: logging
    app.kubernetes.io/managed-by: kubectl
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - namespaces
      - events
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/stats
    verbs:
      - get
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: default
  labels:
    app.kubernetes.io/name: metricbeat
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: 7.16.2
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: logging
    app.kubernetes.io/managed-by: kubectl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
  namespace: default
  labels:
    app.kubernetes.io/name: metricbeat
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: 7.16.2
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: logging
    app.kubernetes.io/managed-by: kubectl
subjects:
  - kind: ServiceAccount
    name: metricbeat
    namespace: default
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat
  namespace: default
  labels:
    app.kubernetes.io/name: metricbeat
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: 7.16.2
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: logging
    app.kubernetes.io/managed-by: kubectl
data:
  ilm-policy.json: |
    {
      "policy": {
        "phases": {
          "hot": {
            "actions": {
              "rollover": {
                "max_age": "1d",
                "max_size": "10gb"
              },
              "set_priority": {
                "priority": 100
              }
            }
          },
          "delete": {
            "min_age": "4d",
            "actions": {
              "delete": {}
            }
          }
        }
      }
    }
